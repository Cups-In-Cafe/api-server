<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="meetMapper">
  
  <!-- 모임 생성 -->
  <select id="makMeet" parameterType="Map" resultType="HashMap">
     CALL meet_master_mak(
          #{pUserId},
          #{p_meet_type},
          #{p_meet_cate},
          #{p_meet_nm}
    );
  </select>
  
  <!-- 모임 수정 -->
  <update id="updateMeet" parameterType="Map" >
    UPDATE meet_master SET
          meet_type = #{meet_type},
          meet_cate = #{meet_cate},
          meet_name = #{meet_name},
          meet_status = #{meet_status},
          update_date = now()
    WHERE 
          meet_id = #{meet_id}
  </update>

  <!-- 모임 리스트 조회 -->
  <select id="getList" parameterType="Map" resultType="HashMap">
    select 
            sql_calc_found_rows
            meet_id , 
            meet_type ,
            getCodeNm( '16' ,meet_type) as meet_type_nm,
            meet_cate ,
            getCodeNm( '43' ,meet_cate) as meet_cate_nm,
            meet_name,
            meet_status ,
            getCodeNm( '71' ,meet_status) as meet_status_nm,
            create_date
    from    meet_master mm 
    where   1=1
    <if test='p_meet_id != null and p_meet_id != "" '>
      and meet_id = #{p_meet_id}
    </if>
    <if test='p_meet_type != null and p_meet_type != "" '>
      and meet_type = #{p_meet_type}
    </if>
    <if test='p_meet_cate != null and p_meet_cate != "" '>
      and meet_cate =#{p_meet_cate}
    </if>
    <if test='p_meet_nm != null and p_meet_nm != "" '>
      and meet_name like CONCAT('%',#{p_meet_nm},'%')
    </if>
    <if test='meet_status != null and meet_status != "" '>
      and meet_status = #{meet_status};
    </if>
    <choose>
      <when test='ordr_nm != null and ordr_nm != "" '>
        order by ${ordr_nm}
      </when>
      <otherwise>
        order by create_date desc , meet_name  
      </otherwise>
    </choose>
    LIMIT ${count} OFFSET ${startRows}
  </select>

  <!-- Row Cnt 가져오기- 1 -->
  <select id="getTotalRows" parameterType="Map" resultType="HashMap">
    SELECT FOUND_ROWS() AS totalCnt;
  </select>
  <!-- Row Cnt 가져오기- 2 -->
  <select id="getTotalRows2" parameterType="Map" resultType="HashMap">
    select count(1) AS totalCnt from    meet_master mm 
    where   1=1
    <if test='p_meet_id != null and p_meet_id != "" '>
      and meet_id = #{p_meet_id}
    </if>
    <if test='p_meet_type != null and p_meet_type != "" '>
      and meet_type = #{p_meet_type}
    </if>
    <if test='p_meet_cate != null and p_meet_cate != "" '>
      and meet_cate =#{p_meet_cate}
    </if>
    <if test='p_meet_status != null and p_meet_status != "" '>
      and meet_status = #{p_meet_status};
    </if>
    <if test='p_meet_nm != null and p_meet_nm != "" '>
      and meet_name like CONCAT('%',#{p_meet_nm},'%')
    </if>
  </select>

  <!-- 모임원 조회 -->
  <select id="getMemList" parameterType="Map" resultType="HashMap">
    select 
            sql_calc_found_rows
            mm.user_id , 
            ua.user_nickname ,
            mm.user_auth ,
            mm.member_status ,
            mm.create_date ,
            mm.update_date 
    from  meet_member mm , user_attr ua 
    where meet_id = #{meet_id}
      and mm.user_id = ua.USER_ID 
    LIMIT ${count} OFFSET ${startRows}
  </select>


  <!-- 모임 조회 -->
  <select id="getDetail" parameterType="Map" resultType="HashMap">
      select 
              mm.meet_id , 
              mm.meet_type ,
              mm.meet_cate ,
              mm.meet_status ,
              mm.meet_name,
              mm.create_date , 
              mm.update_date
      from    meet_master mm
      where   mm.meet_id = #{meet_id}
  </select>
  <!-- 멤버 생성 -->
  <insert id="signup"  parameterType="Map">
      INSERT INTO meet_member
            ( meet_id , user_id, member_status , user_auth, create_date )
      VALUES
        (
          #{p_meet_id} , 
          #{pUserId}, 
          'bs',
          'm3', 
          now()
        )
  </insert>

  <!-- 멤버 수정 -->
  <update id="updateMember"  parameterType="Map">
      update meet_member set
              member_status = #{member_status},
              user_auth = #{member_auth},
              update_date = now()
      where
              meet_id = #{meet_id}  
      and     user_id = #{user_id}  
  </update>
  
  <!-- 게시글 조회 -->
  <select id="getBoardList" parameterType="Map" resultType="HashMap">
    select
            sql_calc_found_rows
            board_id,
            meet_id,
            board_type,
            getCodeNm( '76' ,board_type) as board_type_nm,
            board_title,
            board_content,
            create_by,
            create_date,
            update_by,
            update_date
    from    meet_board
    where   meet_id = #{meet_id}
    LIMIT ${count} OFFSET ${startRows}
  </select>

</mapper>